#The script supports both, a WS2801 strip that is connected using SPI or a WS281X strip connected to a "normal" gpio
#If an LED_GPIO_PIN greater 0 is specified the WS281X routine is used if not the SPI routine
#Attention: Only 10, 12, 18 and 21 are supported!!!
LED_GPIO_PIN=-1
#If WS281X option is used you can change RGB mapping from GRB to RGB if you like
#Choose between "RGB" and "GRB"
LED_RGB_MODE="GRB"

#The connection to the WS2801 LED stripe can be established either by hardware or software spi
#The default is hardware
#Change the value of SPI_PORT to "" and specify the spi GPIO pins to activate the software spi
SPI_PORT=0
SPI_DEVICE=0

#The clock and data pin to use for the software spi connection
SPI_CLK_GPIO=""
SPI_DATA_GPIO=""

#Which name should the script use to register at the MQTT server?
MQTT_CLIENT_NAME="raspled"
#What is the hostname or ip of the MQTT server?
MQTT_BROKER_ADDRESS="192.168.1.2"
#Optional: Is there a login required to register to the MQTT server?
MQTT_USERNAME=""
MQTT_PASSWORD=""
#Which prefix should be used for the MQTT topics?
MQTT_TOPIC_PREFIX="raspled/"

#To which GPIO pins are the buttons connected?
LED_BTN_ONE_GPIO=17
LED_BTN_TWO_GPIO=27
#How many milliseconds should be waited before another press of the same button is accepted?
LED_BTN_DEBOUNCE_DELAY=300

#How many leds does the connected led stripe have?
LED_MAX_LEDS=160
#How many of the leds should be used during "normal" operation?
LED_NUM_LEDS=160

#How many of the leds should be used in pong mode?
LED_PONG_NUM_LEDS=10
#How many wins are needed to win the whole game?
LED_PONG_MAX_WINS=2
#How many leds before the turn-around are presses of the buttons acceptable?
LED_PONG_TOLERANCE=2

#Which color is the default for the "normal" mode?
LED_COLOR_R=255
LED_COLOR_G=255
LED_COLOR_B=255

#Which color should be used for the pong running light?
LED_PONG_COLOR_R=0
LED_PONG_COLOR_G=0
LED_PONG_COLOR_B=255

#Which color shuld be used to display the result on the led strip?
LED_PONG_RESULT_COLOR_R=0
LED_PONG_RESULT_COLOR_G=255
LED_PONG_RESULT_COLOR_B=0

#How fast should the running light be at the beginning of each game (fraction support!)?
LED_PONG_INIT_DELAY=0.5
#Each time the light turns it gets faster. This value controls how many seconds it gets faster (fraction support!).
LED_PONG_DEC_PER_RUN=0.05
#What is the fastest speed that should be used in seconds (fraction support!)?
LED_PONG_MIN_DELAY=0.02

#If the second button is pressed after the first one within a delay that is less then this value the mode changes to pong
LED_PONG_BTN_DELAY=2
#How many seconds should the result be displayed between the single games (fraction support!)?
LED_PONG_RESULT_DELAY_DURING=2
#How many seconds should the final result be displayed (fraction support!)?
LED_PONG_RESULT_DELAY_AFTER=5

#Should the status be published after every config change? This is only needed if you use two different sources to change the configuration of the strip and want the second source to be updated if the first source changes a value.
LED_PUBLISH_STATUS_AFTER_EVERY_CONFIG_CHANGE=0
#Should the status be published if the output state changed? This feature is enabled because if one of the buttons gets pressed and you have an control source active the source gets informed that the output state changed.
LED_PUBLISH_STATUS_IF_TOGGLED=1
#Should the status be published at the script start?
LED_PUBLISH_STATUS_AT_START=1
